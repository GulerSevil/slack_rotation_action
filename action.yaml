name: "Goalie Selection and Slack Notification"
description: "Select a goaliebot from a text file, update the goaliebot, and notify a Slack channel."

inputs:
  file-path:
    description: "Path to the text file with the list of people"
    required: true
  slack-token:
    description: "Slack API token"
    required: true
  slack-channels:
    description: "Comma-separated list of Slack channel IDs to notify"
    required: false
  user-group-handle:
    description: "Slack user group handle. Required if commands is not set
      or includes update_user_group"
    required: false
  mode:
    description: "Goalie core mode: fixed_full, no_deputy, former_goalie_is_deputy, or next_as_deputy"
    required: false
    default: "next_as_deputy"
  commands:
    description: "Pipe-separated commands to run: update_topic_description, update_user_group, send_slack_message"
    required: false
  cadence:
    description: "Cadence of rotation: day, week, month (default: week)"
    required: false
    default: "week"

runs:
  using: "composite"
  steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
        
    - name: Install Python packages
      shell: bash
      env:
        GH_ACTION_PATH: ${{ github.action_path }}
      run: |
        pip install -e ${GH_ACTION_PATH}

    - name: Run Goalie Selection and Slack Notification
      shell: bash
      run: |
        python3 -m goaliebot.rotation_entry --file-path "${{ inputs.file-path }}" \
                                --slack-token "${{ inputs.slack-token }}" \
                                --slack-channels "${{ inputs.slack-channels }}" \
                                --user-group-handle "${{ inputs.user-group-handle }}" \
                                --mode "${{ inputs.mode }}" \
                                --commands "${{ inputs.commands }}" \
                                --cadence "${{ inputs.cadence }}"
